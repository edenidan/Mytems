@model Mytems.ViewModels.Products.ProductSearchOptions


@using (Html.BeginForm(null, null, FormMethod.Get))
{
<div class="form-horizontal">
    <h4>Search Options</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group" style="display: inline-block">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label" })
        <div>
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group" style="display: inline-block">
        @Html.LabelFor(model => model.SellerUsername, htmlAttributes: new { @class = "control-label" })
        <div>
            @Html.EditorFor(model => model.SellerUsername, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.SellerUsername, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group" style="display: inline-block">
        @Html.LabelFor(model => model.Category, htmlAttributes: new { @class = "control-label" })
        <div>
            @Html.EnumDropDownListFor(model => model.Category, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group" style="display: inline-block">
        @Html.LabelFor(model => model.MinPrice, htmlAttributes: new { @class = "control-label" })
        <div>
            @Html.EditorFor(model => model.MinPrice, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.MinPrice, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group" style="display: inline-block">
        @Html.LabelFor(model => model.MaxPrice, htmlAttributes: new { @class = "control-label" })
        <div>
            @Html.EditorFor(model => model.MaxPrice, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.MaxPrice, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group" style="display: inline-block">
        @Html.LabelFor(model => model.Sold, htmlAttributes: new { @class = "control-label" })
        <div>
            <div class="checkbox">
                @Html.EditorFor(model => model.Sold, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Sold, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group" style="display: inline-block">
        @Html.LabelFor(model => model.MinNumberOfViews, htmlAttributes: new { @class = "control-label" })
        <div>
            @Html.EditorFor(model => model.MinNumberOfViews, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.MinNumberOfViews, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 ">
            <input type="submit" value="Search" class="btn btn-default" />
        </div>
    </div>
</div>
}

<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>

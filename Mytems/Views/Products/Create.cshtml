@model Mytems.Models.Product
@using Mytems.Models

@{
    ViewBag.Title = "Create";
}



<div class="row">
    <div style="margin: 0 auto;float: none;margin-top:5%;">
        <h2>Create</h2>
        @using (Html.BeginForm("Create", "Products", FormMethod.Post,
                                    new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <h4>Product</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Category, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EnumDropDownListFor(model => model.Category, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <input id="DemiPrice" class="form-control text-box single-line" />

                        <div style="visibility:hidden;height:0px;width:0px;">
                            @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                        @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                    </div>

                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                    </div>
                </div>

                @if (Session["User"] is Admin)
                {
                    <div class="form-group">
                        @Html.LabelFor(model => model.SellerID, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("SellerID", null, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.SellerID, "", new { @class = "text-danger" })
                        </div>
                    </div>
                }

                <div class="form-group">
                    <div class="col-md-10">
                        <label for="file">Upload Image:</label>
                        <input type="file" name="file" id="file" style="width: 100%;" />
                    </div>
                </div>



                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" id="submitCreateForm" style="visibility:hidden" value="Create" class="btn btn-default" />
                    </div>
                </div>
            </div>

            <input type="button" onclick="ConvertNSubmit()" value="Create" class="btn btn-primary"/>
            <div>
                @Html.ActionLink("Back to List", "Index")
            </div>
        }
    </div>
</div>





<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>

<script>
    $(document).ready(function () {
        $(window).keydown(function (event) {
            if (event.keyCode == 13) {
                event.preventDefault();
                return false;
            }
        });
    });

    function ConvertNSubmit() {
        if ($("#DemiPrice").val() === "") {
            $("form").submit()
            return;
        }
        let newTicker = getCookie("currencyTicker")
        $.ajax(`https://api.exchangeratesapi.io/latest?symbols=USD&base=${newTicker}`).done(function (data) {
            let factor = data["rates"]["USD"];
            console.log(factor)
            let oldPrice = Number($("#DemiPrice").val().replace(",", ""));

            $("#Price").val((factor * oldPrice).toString())
            $("form").submit()
        });
    }
</script>
